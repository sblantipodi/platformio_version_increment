""" Similar to the pre script, but increments build number """
## DO NOT EDIT THIS FILE, edit version file if you want to start from a different version
#  
#  version_increment.py - Simple versioning script for Platformio
#  
#  Copyright (C) 2020  Davide Perini
#  
#  Permission is hereby granted, free of charge, to any person obtaining a copy of 
#  this software and associated documentation files (the "Software"), to deal
#  in the Software without restriction, including without limitation the rights
#  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell 
#  copies of the Software, and to permit persons to whom the Software is 
#  furnished to do so, subject to the following conditions:
#  
#  The above copyright notice and this permission notice shall be included in 
#  all copies or substantial portions of the Software.
#  
#  You should have received a copy of the MIT License along with this program.  
#  If not, see <https://opensource.org/licenses/MIT/>.
#  

import datetime
import os  

Import("env")

BUILD_NUMBER = 'version'
VERSION_FILE = 'Version.h'
version = '0.1.'

def increment_version(source, target, env):
    """ Similar to the pre script, but increments build number """
    build_no = 0

    try:
        with open(BUILD_NUMBER) as f:
            build_no = f.readline()
            version = build_no[0:build_no.rindex('.')+1]
            build_no = int(build_no[build_no.rindex('.')+1:]) + 1 
    except:
        print('No version file found or incorrect data in it. Starting from 0.1.0')
        build_no = 1
    with open(BUILD_NUMBER, 'w+') as f:
        f.write(version + str(build_no))
        print('Build number: {}'.format(version + str(build_no)))

    hf = """
    // AUTO GENERATED FILE FROM version_increment.py, DO NOT EDIT THIS FILE
    #ifndef VERSION
      #define VERSION "{}"
    #endif
    #ifndef BUILD_TIMESTAMP
      #define BUILD_TIMESTAMP "{}"
    #endif
    """.format(version + str(build_no), datetime.datetime.now())

    if (os.environ.get('PLATFORMIO_INCLUDE_DIR') != None):
        VERSION_FILE = os.environ.get('PLATFORMIO_INCLUDE_DIR') + "/" + VERSION_FILE
    elif os.path.exists("include"):
        VERSION_FILE = "include/" + VERSION_FILE
    
    with open(VERSION_FILE, 'w+') as f:
        f.write(hf)

env.AddPostAction("upload", increment_version)
